// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto/Debug/DebugHolderDTO.proto

package fr.kissy.banshee.proto;

public final class DebugHolderDTO {
  private DebugHolderDTO() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DebugHolderProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .DebugObjectProto objects = 1;
    java.util.List<DebugObjectDTO.DebugObjectProto>
        getObjectsList();
    DebugObjectDTO.DebugObjectProto getObjects(int index);
    int getObjectsCount();
    java.util.List<? extends DebugObjectDTO.DebugObjectProtoOrBuilder>
        getObjectsOrBuilderList();
    DebugObjectDTO.DebugObjectProtoOrBuilder getObjectsOrBuilder(
            int index);
  }
  public static final class DebugHolderProto extends
      com.google.protobuf.GeneratedMessage
      implements DebugHolderProtoOrBuilder {
    // Use DebugHolderProto.newBuilder() to construct.
    private DebugHolderProto(Builder builder) {
      super(builder);
    }
    private DebugHolderProto(boolean noInit) {}
    
    private static final DebugHolderProto defaultInstance;
    public static DebugHolderProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public DebugHolderProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DebugHolderDTO.internal_static_DebugHolderProto_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DebugHolderDTO.internal_static_DebugHolderProto_fieldAccessorTable;
    }
    
    // repeated .DebugObjectProto objects = 1;
    public static final int OBJECTS_FIELD_NUMBER = 1;
    private java.util.List<DebugObjectDTO.DebugObjectProto> objects_;
    public java.util.List<DebugObjectDTO.DebugObjectProto> getObjectsList() {
      return objects_;
    }
    public java.util.List<? extends DebugObjectDTO.DebugObjectProtoOrBuilder>
        getObjectsOrBuilderList() {
      return objects_;
    }
    public int getObjectsCount() {
      return objects_.size();
    }
    public DebugObjectDTO.DebugObjectProto getObjects(int index) {
      return objects_.get(index);
    }
    public DebugObjectDTO.DebugObjectProtoOrBuilder getObjectsOrBuilder(
        int index) {
      return objects_.get(index);
    }
    
    private void initFields() {
      objects_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getObjectsCount(); i++) {
        if (!getObjects(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < objects_.size(); i++) {
        output.writeMessage(1, objects_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < objects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, objects_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DebugHolderProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DebugHolderProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DebugHolderProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DebugHolderProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DebugHolderProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DebugHolderProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DebugHolderProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DebugHolderProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DebugHolderProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DebugHolderProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DebugHolderProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DebugHolderProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DebugHolderDTO.internal_static_DebugHolderProto_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DebugHolderDTO.internal_static_DebugHolderProto_fieldAccessorTable;
      }
      
      // Construct using fr.kissy.banshee.proto.DebugHolderDTO.DebugHolderProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getObjectsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (objectsBuilder_ == null) {
          objects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          objectsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DebugHolderProto.getDescriptor();
      }
      
      public DebugHolderProto getDefaultInstanceForType() {
        return DebugHolderProto.getDefaultInstance();
      }
      
      public DebugHolderProto build() {
        DebugHolderProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DebugHolderProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DebugHolderProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DebugHolderProto buildPartial() {
        DebugHolderProto result = new DebugHolderProto(this);
        int from_bitField0_ = bitField0_;
        if (objectsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            objects_ = java.util.Collections.unmodifiableList(objects_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.objects_ = objects_;
        } else {
          result.objects_ = objectsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DebugHolderProto) {
          return mergeFrom((DebugHolderProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DebugHolderProto other) {
        if (other == DebugHolderProto.getDefaultInstance()) return this;
        if (objectsBuilder_ == null) {
          if (!other.objects_.isEmpty()) {
            if (objects_.isEmpty()) {
              objects_ = other.objects_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureObjectsIsMutable();
              objects_.addAll(other.objects_);
            }
            onChanged();
          }
        } else {
          if (!other.objects_.isEmpty()) {
            if (objectsBuilder_.isEmpty()) {
              objectsBuilder_.dispose();
              objectsBuilder_ = null;
              objects_ = other.objects_;
              bitField0_ = (bitField0_ & ~0x00000001);
              objectsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getObjectsFieldBuilder() : null;
            } else {
              objectsBuilder_.addAllMessages(other.objects_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getObjectsCount(); i++) {
          if (!getObjects(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              DebugObjectDTO.DebugObjectProto.Builder subBuilder = DebugObjectDTO.DebugObjectProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addObjects(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .DebugObjectProto objects = 1;
      private java.util.List<DebugObjectDTO.DebugObjectProto> objects_ =
        java.util.Collections.emptyList();
      private void ensureObjectsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          objects_ = new java.util.ArrayList<DebugObjectDTO.DebugObjectProto>(objects_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          DebugObjectDTO.DebugObjectProto, DebugObjectDTO.DebugObjectProto.Builder, DebugObjectDTO.DebugObjectProtoOrBuilder> objectsBuilder_;
      
      public java.util.List<DebugObjectDTO.DebugObjectProto> getObjectsList() {
        if (objectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(objects_);
        } else {
          return objectsBuilder_.getMessageList();
        }
      }
      public int getObjectsCount() {
        if (objectsBuilder_ == null) {
          return objects_.size();
        } else {
          return objectsBuilder_.getCount();
        }
      }
      public DebugObjectDTO.DebugObjectProto getObjects(int index) {
        if (objectsBuilder_ == null) {
          return objects_.get(index);
        } else {
          return objectsBuilder_.getMessage(index);
        }
      }
      public Builder setObjects(
          int index, DebugObjectDTO.DebugObjectProto value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.set(index, value);
          onChanged();
        } else {
          objectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setObjects(
          int index, DebugObjectDTO.DebugObjectProto.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addObjects(DebugObjectDTO.DebugObjectProto value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.add(value);
          onChanged();
        } else {
          objectsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addObjects(
          int index, DebugObjectDTO.DebugObjectProto value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.add(index, value);
          onChanged();
        } else {
          objectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addObjects(
          DebugObjectDTO.DebugObjectProto.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.add(builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addObjects(
          int index, DebugObjectDTO.DebugObjectProto.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllObjects(
          Iterable<? extends DebugObjectDTO.DebugObjectProto> values) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          super.addAll(values, objects_);
          onChanged();
        } else {
          objectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearObjects() {
        if (objectsBuilder_ == null) {
          objects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          objectsBuilder_.clear();
        }
        return this;
      }
      public Builder removeObjects(int index) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.remove(index);
          onChanged();
        } else {
          objectsBuilder_.remove(index);
        }
        return this;
      }
      public DebugObjectDTO.DebugObjectProto.Builder getObjectsBuilder(
          int index) {
        return getObjectsFieldBuilder().getBuilder(index);
      }
      public DebugObjectDTO.DebugObjectProtoOrBuilder getObjectsOrBuilder(
          int index) {
        if (objectsBuilder_ == null) {
          return objects_.get(index);  } else {
          return objectsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends DebugObjectDTO.DebugObjectProtoOrBuilder>
           getObjectsOrBuilderList() {
        if (objectsBuilder_ != null) {
          return objectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(objects_);
        }
      }
      public DebugObjectDTO.DebugObjectProto.Builder addObjectsBuilder() {
        return getObjectsFieldBuilder().addBuilder(
            DebugObjectDTO.DebugObjectProto.getDefaultInstance());
      }
      public DebugObjectDTO.DebugObjectProto.Builder addObjectsBuilder(
          int index) {
        return getObjectsFieldBuilder().addBuilder(
            index, DebugObjectDTO.DebugObjectProto.getDefaultInstance());
      }
      public java.util.List<DebugObjectDTO.DebugObjectProto.Builder>
           getObjectsBuilderList() {
        return getObjectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DebugObjectDTO.DebugObjectProto, DebugObjectDTO.DebugObjectProto.Builder, DebugObjectDTO.DebugObjectProtoOrBuilder>
          getObjectsFieldBuilder() {
        if (objectsBuilder_ == null) {
          objectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DebugObjectDTO.DebugObjectProto, DebugObjectDTO.DebugObjectProto.Builder, DebugObjectDTO.DebugObjectProtoOrBuilder>(
                  objects_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          objects_ = null;
        }
        return objectsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:DebugHolderProto)
    }
    
    static {
      defaultInstance = new DebugHolderProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DebugHolderProto)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DebugHolderProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DebugHolderProto_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n Proto/Debug/DebugHolderDTO.proto\032 Prot" +
      "o/Debug/DebugObjectDTO.proto\"6\n\020DebugHol" +
      "derProto\022\"\n\007objects\030\001 \003(\0132\021.DebugObjectP" +
      "rotoB+\n\026fr.kissy.banshee.protoB\016DebugHol" +
      "derDTO\210\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_DebugHolderProto_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_DebugHolderProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DebugHolderProto_descriptor,
              new String[] { "Objects", },
              DebugHolderProto.class,
              DebugHolderProto.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          DebugObjectDTO.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
